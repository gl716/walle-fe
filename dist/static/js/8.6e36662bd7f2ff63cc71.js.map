{"version":3,"sources":["webpack:///./src/services/task.service.js","webpack:///./src/services/repo.service.js","webpack:///src/views/task/src/task/task.edit.vue","webpack:///./src/views/task/src/task/task.edit.vue?c089","webpack:///./src/views/task/src/task/task.edit.vue"],"names":["params","arguments","length","undefined","Object","__WEBPACK_IMPORTED_MODULE_0__bases_http_base__","target","isRemoveField","id","config","get","headers","content-type","transformRequest","data","__WEBPACK_IMPORTED_MODULE_1_qs___default","a","stringify","put","Delete","getBranches","http_base","getTags","getCommits","task_edit","props","taskId","String","created","_this","this","asyncToGenerator_default","regenerator_default","mark","_callee","wrap","_context","prev","next","isNew","getProject","$route","projectId","getTask","stop","breadcrumbData","to","name","project","task","branchs","tags","commits","form","branch","commit_id","servers_mode","servers","tag","rules","required","message","trigger","computed","methods","checkServers","server_ids","split","_this2","_callee2","_ref","_ref2","branches","_ref3","_context2","project_service","project_id","sent","concat","filter","item","indexOf","toString","repo_mode","_this3","_callee3","_ref4","_context3","task_service","extends_default","abrupt","promise_default","resolve","t0","reject","requertForm","map","join","file_transmission_mode","file_list","console","log","onSubmit","_this4","$refs","validate","vaild","addTask","updateTask","_this5","_callee4","_context4","$message","type","$router","push","_this6","_callee5","_context5","deleteServer","index","splice","watch","form.servers_mode","immediate","handler","val","form.branch","_this7","_callee6","_ref5","_context6","task_task_edit","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","_v","ref","model","label-width","size","label","prop","value","callback","$$v","$set","expression","placeholder","_l","key","_e","i","closable","on","close","_s","click","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/8.6e36662bd7f2ff63cc71.js","sourcesContent":["import {get, post, put, Delete} from '@/bases/http.base'\nimport qs from 'qs'\n\n/**\n *\n * 获取上线单列表\n * @export\n * @param {any} [params={}]\n * @returns Promise\n */\nexport function getTasks (params = {}) {\n  return get('task/', params, {\n    target: '.wl-table',\n    isRemoveField: true\n  })\n}\n\n/**\n *\n * 获取上线单\n * @export\n * @param {any} [params={}]\n * @returns Promise\n */\nexport function getTask (id, params = {}, config = {}) {\n  return get(`task/${id}`, params, config)\n}\n\n/**\n *\n * 新增上线单\n * @export\n * @param {any} [params={}]\n * @returns Promise\n */\nexport function addTask (params = {}) {\n  return post('task/', params, {\n    headers: {\n      'content-type': 'multipart/form-data'\n    },\n    transformRequest: [function (data) {\n      return qs.stringify(data)\n    }]\n  })\n}\n\n/**\n *\n * 更新上线单\n * @export\n * @param {any} [params={}]\n * @returns Promise\n */\nexport function updateTask (id, params = {}) {\n  return put(`task/${id}`, params, {\n    headers: {\n      'content-type': 'multipart/form-data'\n    },\n    transformRequest: [function (data) {\n      return qs.stringify(data)\n    }]\n  })\n}\n\n/**\n *\n * 删除上线单\n * @export\n * @param {any} [params={}]\n * @returns Promise\n */\nexport function deleteTask (id, params = {}) {\n  return Delete(`task/${id}`, params)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/task.service.js","import {get} from '@/bases/http.base'\n\n/**\n *\n * 获取项目分支列表\n * @export\n * @param {any} [params={}]\n * @returns Promise\n */\nexport function getBranches (params = {}, config = {}) {\n  return get('repo/branches/', params, config)\n}\n\n/**\n *\n * 获取项目tag列表\n * @export\n * @param {any} [params={}]\n * @returns Promise\n */\nexport function getTags (params = {}, config = {}) {\n  return get('repo/tags/', params, config)\n}\n\n/**\n *\n * 获取项目commits列表\n * @export\n * @param {any} [params={}]\n * @returns Promise\n */\nexport function getCommits (params = {}, config = {}) {\n  return get('repo/commits/', params, config)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/repo.service.js","<template>\n    <div class=\"wl-task-edit\">\n        <wl-breadcrumb :data=\"breadcrumbData\"></wl-breadcrumb>\n        <div class=\"wl-task-edit__content\">\n            <el-form ref=\"form\" :model=\"form\" label-width=\"100px\" :rules=\"rules\" size=\"small\">\n                <el-form-item label=\"上线单标题\" prop=\"name\">\n                    <el-input v-model=\"form.name\"></el-input>\n                </el-form-item>\n                <el-form-item v-if=\"project&&project.repo_mode==='branch'\" label=\"选取分支\">\n                    <el-select v-model=\"form.branch\" placeholder=\"选取分支\">\n                        <el-option v-for=\"item in branchs\" :key=\"item\" :label=\"item\" :value=\"item\"></el-option>\n                    </el-select>\n                </el-form-item>\n                <el-form-item v-if=\"project&&project.repo_mode==='tag'\" label=\"选取Tag\">\n                    <el-select v-model=\"form.tag\" placeholder=\"选取Tag\">\n                        <el-option v-for=\"item in tags\" :key=\"item\" :label=\"item\" :value=\"item\"></el-option>\n                    </el-select>\n                </el-form-item>\n                <el-form-item  v-if=\"project&&project.repo_mode==='branch'\" label=\"选取版本\">\n                    <el-select v-model=\"form.commit_id\" placeholder=\"选取版本\">\n                        <el-option v-for=\"item in commits\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\"></el-option>\n                    </el-select>\n                </el-form-item>\n                <el-form-item label=\"选取服务器\">\n                    <el-radio-group v-model=\"form.servers_mode\">\n                        <el-radio label=\"全量服务器上线\"></el-radio>\n                        <el-radio label=\"自定义服务器上线\"></el-radio>\n                    </el-radio-group>\n                </el-form-item>\n                <el-form-item v-if=\"form.servers_mode==='自定义服务器上线'\">\n                    <div class=\"wl-task-edit__servers\">\n                      <el-tag\n                        v-for=\"(tag,i) in form.servers\"\n                        :key=\"tag.id\"\n                        @close=\"()=>deleteServer(tag,i)\"\n                        closable\n                        type='info'>\n                        {{tag.name}}\n                      </el-tag>\n                    </div>\n                </el-form-item>\n                <el-form-item>\n                    <el-button type=\"primary\" @click=\"onSubmit\">提交</el-button>\n                </el-form-item>\n            </el-form>\n        </div>\n    </div>\n</template>\n<script>\nimport {getProject} from '@/services/project.service'\nimport {getTask, addTask, updateTask} from '@/services/task.service'\nimport {getBranches, getTags, getCommits} from '@/services/repo.service'\n\nexport default {\n  props: {\n    taskId: String\n  },\n  async created () {\n    if (this.isNew) {\n      this.getProject(this.$route.params.projectId)\n    } else {\n      await this.getTask()\n      this.getProject()\n    }\n  },\n  data () {\n    return {\n      breadcrumbData: [\n        {\n          to: '/task/list',\n          name: '上线单'\n        },\n        {\n          to: '',\n          name: this.id ? '编辑' : '创建'\n        }\n      ],\n      project: {},\n      task: {},\n      branchs: [],\n      tags: [],\n      commits: [],\n      form: {\n        name: '',\n        branch: '',\n        commit_id: '',\n        servers_mode: '全量服务器上线',\n        servers: [],\n        tag: ''\n      },\n      rules: {\n        name: [\n          { required: true, message: '请输入上线单名称', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  computed: {\n    isNew () {\n      return this.$route.name === 'TaskCreateOfProject' && !this.taskId\n    }\n  },\n  methods: {\n    checkServers () {\n      if (this.project.server_ids.length === this.task.servers.split(',').length) {\n        return '全量服务器上线'\n      } else {\n        return '自定义服务器上线'\n      }\n    },\n    async getProject (projectId) {\n      const {data} = await getProject(projectId || this.task.project_id)\n      this.project = data\n      if (!this.isNew) {\n        this.form.servers = this.project.server_ids.filter(item => {\n          return this.task.servers.split(',').indexOf(item.id.toString()) > -1\n        })\n      } else {\n        this.form.servers = [].concat(this.project.server_ids)\n      }\n      if (!this.isNew) {\n        this.form.servers_mode = this.checkServers()\n      }\n      if (this.project.repo_mode === 'branch') {\n        const {data: {branches}} = await getBranches({\n          project_id: this.project.id\n        })\n        this.branchs = branches\n      } else {\n        const {data: {tags}} = await getTags({\n          project_id: this.project.id\n        })\n        this.tags = tags\n      }\n    },\n    async getTask () {\n      try {\n        const {data} = await getTask(this.$route.params.taskId)\n        this.task = data\n        this.form = {\n          ...this.form,\n          ...data\n        }\n        return Promise.resolve()\n      } catch (error) {\n        return Promise.reject(error)\n      }\n    },\n    requertForm () {\n      const params = {\n        name: this.form.name,\n        project_id: this.project.id,\n        servers: this.form.servers.map(item => item.id).join(','),\n        commit_id: this.form.commit_id,\n        branch: this.form.branch,\n        file_transmission_mode: 0,\n        file_list: '*.log',\n        tag: this.form.tag\n      }\n      console.log(params)\n      return params\n    },\n    onSubmit () {\n      this.$refs.form.validate((vaild) => {\n        if (vaild) {\n          if (this.isNew) {\n            this.addTask()\n          } else {\n            this.updateTask()\n          }\n        } else {\n          return false\n        }\n      })\n    },\n    async addTask () {\n      await addTask(this.requertForm())\n      this.$message({\n        type: 'success',\n        message: '添加成功'\n      })\n      this.$router.push('/task/list')\n    },\n    async updateTask () {\n      await updateTask(this.$route.params.taskId, this.requertForm())\n      this.$message({\n        type: 'success',\n        message: '修改成功'\n      })\n      this.$router.push('/task/list')\n    },\n    deleteServer (tag, index) {\n      this.form.servers.splice(index, 1)\n    }\n  },\n  watch: {\n    'form.servers_mode': {\n      immediate: true,\n      handler (val) {\n        if (val === '全量服务器上线') {\n          this.form.servers = this.project && this.project.server_ids ? [].concat(this.project.server_ids) : []\n        }\n      }\n    },\n    'form.branch': {\n      async handler (val) {\n        const {data: {branches}} = await getCommits({\n          project_id: this.project.id,\n          branch: val\n        })\n        this.commits = branches\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import 'scss';\n\n@include b(task-edit) {\n   margin: 20px;\n   box-sizing: border-box;\n   background: #fff;\n   min-height: calc(100% - 40px);\n   padding: 10px;\n   display: flex;\n   flex-direction: column;\n\n   @include e(content) {\n       width: 500px;\n   }\n\n   @include e(servers) {\n    width: 300px;\n    border: 1px dashed #ddd;\n    border-radius: 4px;\n    padding: 10px;\n    display: flex;\n    flex-direction: column;\n\n    .el-tag--info {\n      @include text-overflow-1;\n\n      position: relative;\n      margin-bottom: 10px;\n    }\n\n    .el-tag .el-icon-close {\n      position: absolute;\n      right: 5px;\n      top: 7px;\n    }\n   }\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/views/task/src/task/task.edit.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"wl-task-edit\"},[_c('wl-breadcrumb',{attrs:{\"data\":_vm.breadcrumbData}}),_vm._v(\" \"),_c('div',{staticClass:\"wl-task-edit__content\"},[_c('el-form',{ref:\"form\",attrs:{\"model\":_vm.form,\"label-width\":\"100px\",\"rules\":_vm.rules,\"size\":\"small\"}},[_c('el-form-item',{attrs:{\"label\":\"上线单标题\",\"prop\":\"name\"}},[_c('el-input',{model:{value:(_vm.form.name),callback:function ($$v) {_vm.$set(_vm.form, \"name\", $$v)},expression:\"form.name\"}})],1),_vm._v(\" \"),(_vm.project&&_vm.project.repo_mode==='branch')?_c('el-form-item',{attrs:{\"label\":\"选取分支\"}},[_c('el-select',{attrs:{\"placeholder\":\"选取分支\"},model:{value:(_vm.form.branch),callback:function ($$v) {_vm.$set(_vm.form, \"branch\", $$v)},expression:\"form.branch\"}},_vm._l((_vm.branchs),function(item){return _c('el-option',{key:item,attrs:{\"label\":item,\"value\":item}})}))],1):_vm._e(),_vm._v(\" \"),(_vm.project&&_vm.project.repo_mode==='tag')?_c('el-form-item',{attrs:{\"label\":\"选取Tag\"}},[_c('el-select',{attrs:{\"placeholder\":\"选取Tag\"},model:{value:(_vm.form.tag),callback:function ($$v) {_vm.$set(_vm.form, \"tag\", $$v)},expression:\"form.tag\"}},_vm._l((_vm.tags),function(item){return _c('el-option',{key:item,attrs:{\"label\":item,\"value\":item}})}))],1):_vm._e(),_vm._v(\" \"),(_vm.project&&_vm.project.repo_mode==='branch')?_c('el-form-item',{attrs:{\"label\":\"选取版本\"}},[_c('el-select',{attrs:{\"placeholder\":\"选取版本\"},model:{value:(_vm.form.commit_id),callback:function ($$v) {_vm.$set(_vm.form, \"commit_id\", $$v)},expression:\"form.commit_id\"}},_vm._l((_vm.commits),function(item){return _c('el-option',{key:item.id,attrs:{\"label\":item.name,\"value\":item.id}})}))],1):_vm._e(),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"选取服务器\"}},[_c('el-radio-group',{model:{value:(_vm.form.servers_mode),callback:function ($$v) {_vm.$set(_vm.form, \"servers_mode\", $$v)},expression:\"form.servers_mode\"}},[_c('el-radio',{attrs:{\"label\":\"全量服务器上线\"}}),_vm._v(\" \"),_c('el-radio',{attrs:{\"label\":\"自定义服务器上线\"}})],1)],1),_vm._v(\" \"),(_vm.form.servers_mode==='自定义服务器上线')?_c('el-form-item',[_c('div',{staticClass:\"wl-task-edit__servers\"},_vm._l((_vm.form.servers),function(tag,i){return _c('el-tag',{key:tag.id,attrs:{\"closable\":\"\",\"type\":\"info\"},on:{\"close\":function (){ return _vm.deleteServer(tag,i); }}},[_vm._v(\"\\n                    \"+_vm._s(tag.name)+\"\\n                  \")])}))]):_vm._e(),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.onSubmit}},[_vm._v(\"提交\")])],1)],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-7861f456\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/task/src/task/task.edit.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-7861f456\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./task.edit.vue\")\n}\nvar normalizeComponent = require(\"!../../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./task.edit.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./task.edit.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7861f456\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./task.edit.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/task/src/task/task.edit.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}